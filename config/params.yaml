prm:
  debug_output: false
  debug_visuals: false
  seed: 1 # Seed of the visibility-PRM. Set to -1 for random!
  T: 4.8 # Time horizon [s]
  N: 12 # 40                                 # Discrete time steps [#]
  # T: 8.0
  # N: 20
  winding_pass_threshold: 0.25
  topology_comparison: Homology # Homology (default) or UVD
  use_learning: false
  sampling_function: Uniform # Uniform (default)
  predictions_are_constant_velocity: false
  track_selected_homology_only: false
  rules: none
  sample_margin: 5.0
  n_samples: 1000 #200    # Number of samples for PRM
  timeout: 200 #15       # Timeout for PRM sampling [ms]
  n_paths: 4 # Number of guidance trajectories
  view_angle_times_pi: 0.606 # View angle when sampling in a conus (disabled by default)
  max_velocity: 3.0 # Maximum velocity of connections between nodes
  max_acceleration: 3.0 # Maximum velocity of connections between nodes
  connection_filters:
    forward: false
    acceleration: true
  selection_weights: # Weights on the spline selection heuristic cost
    length: 1.
    velocity: 0 #100.
    acceleration: 0. #100.
    consistency: 0 #0.24904675216524505  # How much better should a new trajectory be to be selected [%]
  goals: # Only used when `LoadReferencePath` is used to set the goals
    longitudinal: 6 # Number of goals in direction of the path
    vertical: 3 # Number of goals in direction orthogonal to the path
  spline_optimization: # Settings when the splines are optimized and used as reference trajectory
    enable: true #false
    num_points: 10 # -1 = N
    geometric: 25.
    smoothness: 10.
    collision: 0.5
    velocity_tracking: 0.01
  visuals:
    transparency: 0.7 # The least transparent the obstacle visualization is (0-1)
    visualize_all_samples: true # Visualizes all PRM samples
    visualize_homology: false
    show_indices: false
  enable:
    dynamically_propagate_nodes: false #true  # Propagate the nodes in time (dropping them)
    project_from_obstacles: false # Project the guidance trajectory from obstacles if enabled (not necessary by default)
  test_node:
    continuous_replanning: true         # When using the test nodes: keep planning continuously?
