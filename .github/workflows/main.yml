name: ROS CI - Build Guidance Planner

on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

jobs:

  industrial_ci:
      name: ROS ${{ matrix.ROS_DISTRO }} (${{ matrix.ROS_REPO }})
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false # uncomment if failing jobs should not cancel the others immediately
        matrix: # matrix is the product of entries
          ROS_DISTRO: [noetic]
          ROS_REPO: [main]
          # exclude: # specific configuration can be excludes
          #   - {ROS_DISTRO: melodic, ROS_REPO: testing}
          # include: # add additional configurations
            # - {ROS_DISTRO: kinetic, ROS_REPO: testing}
      # env:
      #   CCACHE_DIR: "${{ github.workspace }}/.ccache" # directory for ccache (and how we enable ccache in industrial_ci)
      steps:
        - uses: actions/checkout@v4 # clone target repository
          # uses: actions/checkout@v4
          #   with:
          #   repository: oscardegroot/ros_tools
          #   path: src/ros_tools
        # - uses: actions/cache@v2 # fetch/store the directory used by ccache before/after the ci run
        #   with:
        #     path: ${{ env.CCACHE_DIR }}
        #     # This configuration will always create a new ccache cache starting off from the previous one (if any).
        #     # In this simple version it will be shared between all builds of the same ROS_REPO and ROS_REPO
        #     # and might need some fine-tuning to match the use case
        #     key: ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-${{github.run_id}}
        #     restore-keys: |
        #       ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-
        - uses: 'ros-industrial/industrial_ci@master' # run industrial_ci
          env: # either pass all entries explicitly
            ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
            ROS_REPO: ${{ matrix.ROS_REPO }}
            TARGET_WORKSPACE: $TARGET_REPO_PATH github:oscardegroot/ros_tools#main
          # with: # or pass the full matrix as config
          #    config: ${{toJSON(matrix)}}


